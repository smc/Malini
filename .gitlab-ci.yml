image: "debian:bookworm-slim"

before_script:
  - apt-get update -y
  - apt-get install -y make git python3-pip python3-venv python3-yaml texlive-metapost libharfbuzz-bin
  - python3 -m venv .venv
  - source .venv/bin/activate
  - pip3 install -r requirements.txt

stages:
  - build
  - test
  - upload
  - deploy
  - release


variables:
  PACKAGE_VERSION: $CI_COMMIT_TAG
  MALINI_VAR_OTF: "Malini-VF.otf"
  MALINI_VAR_TTF: "Malini-VF.ttf"
  MALINI_VAR_WOFF2: "Malini-VF.woff2"
  MALINI_ZIP: "Malini-${PACKAGE_VERSION}.zip"
  MALINI_TAR_BALL: "Malini-${PACKAGE_VERSION}.tar.gz"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/fontrelease/${PACKAGE_VERSION}"


build:
  stage: build
  script:
    - make build release
  artifacts:
    paths:
    - fonts/

test:
  stage: test
  script:
    - ruff check .
    - make test
  artifacts:
    expire_in: 1000 yrs
    paths:
    - proofs/

pages:
  stage: deploy
  script:
    - mkdir public
    - cp -rf fonts tests specimen proofs public
  artifacts:
    expire_in: 1000 yrs
    paths:
      - public  # instruct GitLab to keep the public folder
  only:
    - master

upload:
  stage: release
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file fonts/Malini/otf-variable/${MALINI_VAR_OTF} ${PACKAGE_REGISTRY_URL}/${MALINI_VAR_OTF}
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file fonts/Malini/ttf-variable/${MALINI_VAR_TTF} ${PACKAGE_REGISTRY_URL}/${MALINI_VAR_TTF}
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file fonts/Malini/webfonts/${MALINI_VAR_WOFF2} ${PACKAGE_REGISTRY_URL}/${MALINI_VAR_WOFF2}
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file fonts/${MALINI_ZIP} ${PACKAGE_REGISTRY_URL}/${MALINI_ZIP}
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file fonts/${MALINI_TAR_BALL} ${PACKAGE_REGISTRY_URL}/${MALINI_TAR_BALL}

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags
  before_script:
    - echo "Pass. Just overriding"
  script:
    - echo "Running release_job for $CI_COMMIT_TAG of $CI_PROJECT_NAME"
  release:
    name: 'Release $CI_COMMIT_TAG of $CI_PROJECT_NAME'
    description: 'Release $CI_COMMIT_TAG' # Need to replace with 'CHANGELOG.md'
    # tag_name is a mandatory field and can not be an empty string
    tag_name: '$CI_COMMIT_TAG'
    ref: $CI_COMMIT_TAG
    assets:
      links:
        - name: 'Malini Variable font TTF version - Recommended for desktop installations'
          url: '${PACKAGE_REGISTRY_URL}/${MALINI_VAR_TTF}'
        - name: 'Malini Variable font OTF version - Recommended for desktop installations with latest operating systems'
          url: '${PACKAGE_REGISTRY_URL}/${MALINI_VAR_OTF}'
        - name: 'Malini Variable font webfont - For font embedding in webpages.'
          url: '${PACKAGE_REGISTRY_URL}/${MALINI_VAR_WOFF2}'
        - name: 'Malini all font variants as tar.gz'
          url: '${PACKAGE_REGISTRY_URL}/${MALINI_TAR_BALL}'
        - name: 'Malini all font variants as zip file'
          url: '${PACKAGE_REGISTRY_URL}/${MALINI_ZIP}'

trigger_job:
  stage: release
  trigger:
    project: smc/smc.org.in
